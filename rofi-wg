#!/usr/bin/bash
set -euo pipefail

as_root() {
  local wrapper="/usr/local/sbin/rofi-mullvad-wrapper.sh"
  # Validate wrapper exists
  if [[ ! -f "$wrapper" ]]; then
    echo "Error: VPN wrapper not found or not executable: $wrapper" >&2
    return 1
  fi

  # Check ownership
  local owner
  owner=$(stat -c "%U" "$wrapper" 2>/dev/null)
  if [[ "$owner" != "root" ]]; then
    echo "Error: VPN wrapper not owned by root: $wrapper" >&2
    return 1
  fi
  
  # Execute with all arguments passed through
  sudo "$wrapper" "$@"
}

#Get config files in /etc/wireguard/
conf_files=$(as_root wg-list | sed 's/\.conf$//')

#Check if there's an active connection
connection=$(as_root wg-show)
if [[ -n "$connection" ]]; then
  active_connection=$( echo "$connection" | grep "interface" | awk '{print $2}')
else
  active_connection=""
fi

# Get selection
if [[ -n $active_connection ]]; then
  line_num=$(echo "$conf_files" | grep -n "^${active_connection}$" | cut -d: -f1)
  if [[ -n "$line_num" ]]; then
    index=$((line_num - 1))
    selection=$(echo "$conf_files" | rofi -dmenu -u "$index")
  else
    # Current conf not found in list, show without highlighting
    selection=$(echo "$conf_files" | rofi -dmenu)
  fi
else
  selection=$(echo "$conf_files" | rofi -dmenu)
fi

# Check if user actually selected something
if [[ -z "$selection" ]]; then
  echo "No selection made, exiting." >&2
  exit 0
fi

# Execute VPN commands
if [[ -z "$active_connection" ]]; then
  as_root wg-up "$selection"
elif [[ "$active_connection" = "$selection" ]]; then
  as_root wg-down "$active_connection"
elif echo "$conf_files" | grep -q "$selection"; then
  as_root wg-down "$active_connection"
  as_root wg-up "$selection"
else
  echo "Error: Invalid WireGuard file name"
  exit 1
fi
