#!/usr/bin/bash
set -euo pipefail

JSON_PATH="${XDG_CONFIG_HOME:-$HOME/.config}/rofi-wg/routes.json"

as_root() {
  local wrapper="/usr/local/sbin/rofi-mullvad-wrapper.sh"
  # Validate wrapper exists
  if [[ ! -f "$wrapper" ]]; then
    echo "Error: VPN wrapper not found or not executable: $wrapper" >&2
    return 1
  fi

  # Check ownership
  local owner
  owner=$(stat -c "%U" "$wrapper" 2>/dev/null)
  if [[ "$owner" != "root" ]]; then
    echo "Error: VPN wrapper not owned by root: $wrapper" >&2
    return 1
  fi
  
  # Execute with all arguments passed through
  sudo "$wrapper" "$@"
}

change_route(){
  #Check if routes.json exists and contains the conf in $1
  if [[ ! -f "$JSON_PATH" ]]; then
    echo "No $JSON_PATH has been defined"
    exit 0
  fi

  local selection="$2"
  local flag="$1"

  # Defined net vars
  if grep -qw "$selection" "$JSON_PATH"; then
    local network=$(jq -r --arg key "$selection" '.[$key].network' "$JSON_PATH")
    local gateway=$(jq -r --arg key "$selection" '.[$key].gateway' "$JSON_PATH")
    local interface=$(jq -r --arg key "$selection" '.[$key].interface' "$JSON_PATH")
    echo "DEBUG: Defined net vars"
  fi

  if [[ -n "$network" && -n "$gateway" && -n "$interface" ]]; then
    if [[ "$flag" = '-a' ]]; then
      as_root route-add "$network" "$gateway" "$interface"
      echo "DEBUG: Route added"
    elif [[ "$flag" = '-d' ]] && ip route show | grep -qw "$network via $gateway dev $interface"; then
      echo "DEBUG: Trying to remove route"
      as_root route-del "$network" "$gateway" "$interface"
      echo "DEBUG: Route removed"
    else
      echo "Error: unable to modify static route"
    fi
  fi
}

#Get config files in /etc/wireguard/
conf_files=$(as_root wg-list | sed 's/\.conf$//')

#Check if there's an active connection
connection=$(as_root wg-show)
if [[ -n "$connection" ]]; then
  active_connection=$( echo "$connection" | grep "interface" | awk '{print $2}')
else
  active_connection=""
fi

# Get selection
if [[ -n $active_connection ]]; then
  line_num=$(echo "$conf_files" | grep -n "^${active_connection}$" | cut -d: -f1)
  if [[ -n "$line_num" ]]; then
    index=$((line_num - 1))
    selection=$(echo "$conf_files" | rofi -dmenu -u "$index")
  else
    # Current conf not found in list, show without highlighting
    selection=$(echo "$conf_files" | rofi -dmenu)
  fi
else
  selection=$(echo "$conf_files" | rofi -dmenu)
fi

# Check if user actually selected something
if [[ -z "$selection" ]]; then
  echo "No selection made, exiting." >&2
  exit 0
fi

# Execute VPN commands
if [[ -z "$active_connection" ]]; then
  as_root wg-up "$selection" && change_route "-a" "$selection"
elif [[ "$active_connection" = "$selection" ]]; then
  as_root wg-down "$active_connection" && change_route "-d" "$selection"
elif echo "$conf_files" | grep -q "$selection"; then
  as_root wg-down "$active_connection" && change_route "-d" "$active_connection"
  as_root wg-up "$selection" && change_route "-a" "$selection"
else
  echo "Error: Invalid WireGuard file name"
  exit 1
fi
